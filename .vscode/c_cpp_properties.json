/*
The c_cpp_properties.json file provided a configuration file used in the context of a C/C++ development environment, most likely for a project involving ROS (Robot Operating System).

Here's what the content of this file means:

1. configurations: This section defines the configurations or settings for C/C++ development environment. From this code, there is one configuration defined under the configurations array.

  browse: This subsection provides configuration options for code browsing or code navigation features.

    databaseFilename: This setting specifies the database file used for code browsing. The ${default} variable is often used to indicate that the default database should be used.

    limitSymbolsToIncludedHeaders: When set to false, it means that code navigation features will not be limited to symbols found only in included headers.

  includePath: This is an array of directories where the C/C++ compiler should look for header files (.h and .hpp) when compiling the code. In this configuration, it's including two paths:

    /opt/ros/noetic/include/**: This includes header files from the ROS Noetic distribution.

    /usr/include/**: This includes system-wide header files.

  name: This is the name of the configuration. In this example, it's named "ROS."

  intelliSenseMode: This specifies the IntelliSense mode for the development environment. In this case, it's set to "gcc-x64," which indicates that the IntelliSense features should be based on the GNU Compiler Collection (GCC) for the x64 architecture.

  compilerPath: This setting specifies the path to the C/C++ compiler (gcc in this case) that should be used for building and compiling the code.

  cStandard: This specifies the C language standard to be used for compiling C code. In this configuration, it's set to "gnu11," which corresponds to the GNU C11 standard.

  cppStandard: This specifies the C++ language standard to be used for compiling C++ code. In this configuration, it's set to "c++14," indicating that the C++14 standard should be used.

2. version: This specifies the version of the configuration file format being used. In this example, it's set to 4, indicating that this configuration file follows version 4 of the format.

Overall, this c_cpp_properties.json file is configuring the development environment for a C/C++ project, particularly one related to ROS development, by specifying include paths, compiler settings, and other configuration options for code navigation and IntelliSense features. It helps the development environment understand how to work with the code and provides the necessary information for code analysis and completion.
*/

{
  "configurations": [
    {
      "browse": {
        "databaseFilename": "${default}",
        "limitSymbolsToIncludedHeaders": false
      },
      "includePath": [
        "/opt/ros/noetic/include/**",
        "/usr/include/**"
      ],
      "name": "ROS",
      "intelliSenseMode": "gcc-x64",
      "compilerPath": "/usr/bin/gcc",
      "cStandard": "gnu11",
      "cppStandard": "c++14"
    }
  ],
  "version": 4
}